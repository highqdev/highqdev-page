<section class="bg-gray-custom-light p-6 rounded-t-xl">
  <h2 class="text-center text-2xl font-semibold text-green-custom mb-4">
    ¿Podemos ayudarte?
  </h2>
  <p class="text-center text-white text-sm font-semibold">
    Te asesoramos y ayudamos a buscar la mejor solución para tu negocio.
  </p>
  
  <form 
    class="mt-10 bg-gray-custom-dark rounded-lg p-4 w-full max-w-4xl mx-auto md:p-8" 
    method="post"
    id="contact-form"
  >
    <div class="grid grid-flow-row gap-4 md:gap-6">
      <div class="grid grid-flow-row gap-4 md:gap-6 md:grid-flow-col">
        <div>
          <label for="name" class="text-xs text-white block mb-1 md:mb-2 after:content-['*'] after:text-red-500">Nombre</label>
          <input type="text" name="name" id="name" class="bg-white px-2 py-1 rounded w-full" required/>
        </div>
        <div>
          <label for="lastName" class="text-xs text-white block mb-1 md:mb-2 after:content-['*'] after:text-red-500">Apellido</label>
          <input type="text" name="lastName" id="lastName" class="bg-white px-2 py-1 rounded w-full" required/>
        </div>
      </div>
      <div>
        <label for="phone" class="text-xs text-white block mb-1 md:mb-2 after:content-['*'] after:text-red-500">Teléfono</label>
        <input 
          type="tel" 
          name="phone" 
          id="phone" 
          class="bg-white px-2 py-1 rounded w-full" 
          pattern="[0-9]{10,}"
          title="Por favor ingresa al menos 10 dígitos numéricos"
          required
        />
        <span id="phone-error" class="text-red-500 text-xs hidden">El teléfono debe contener al menos 10 dígitos numéricos</span>
      </div>
      <div>
        <label for="email" class="text-xs text-white block mb-1 md:mb-2 after:content-['*'] after:text-red-500">Email</label>
        <input type="email" name="email" id="email" class="bg-white px-2 py-1 rounded w-full" required/>
      </div>
      <div>
        <label for="message" class="text-xs text-white block mb-1 md:mb-2">Mensaje</label>
        <textarea name="message" id="message" class="bg-white px-2 py-1 rounded w-full"></textarea>
      </div>
      <div id="alert-message" />
    </div>
    <button 
      type="submit"
      class="block mt-10 mx-auto bg-green-custom text-white px-16 py-2 rounded-md cursor-pointer hover:bg-green-custom/80 hover:scale-105 transition"
    >
      Enviar
    </button>
  </form>
</section>

<script>
  const form = document.getElementById("contact-form") as HTMLFormElement;
  const alertMessage = document.getElementById("alert-message") as HTMLDivElement;
  const phoneInput = document.getElementById("phone") as HTMLInputElement;
  const phoneError = document.getElementById("phone-error") as HTMLSpanElement;

  if (!form || !alertMessage || !phoneInput || !phoneError) throw new Error("Missing form elements");

  const SUCCESS_ALERT = `
    <div class="p-2 bg-green-custom/30 rounded-lg border border-green-custom text-center">
      <h4 class="text-white font-semibold">
        ¡Gracias por contactarnos!
      </h4>
      <p class="text-white text-sm">
        Nos pondremos en contacto contigo lo más pronto posible.
      </p>
    </div>
  `;

  const ERROR_ALERT = `
    <div class="p-2 bg-red-custom/30 rounded-lg border border-red-custom text-center">
      <h4 class="text-white font-semibold">
        ¡Algo salió mal!
      </h4>
      <p class="text-white text-sm">
        ¡Ups!, intenta nuevamente o contáctanos por nuestras redes sociales.
      </p>
    </div>
  `;

  interface FormData {
    name: string;
    lastName: string;
    phone: string;
    email: string;
    message?: string;
  }

  // Validación del teléfono en tiempo real
  phoneInput.addEventListener("input", () => {
    const isValid = /^[0-9]{10,}$/.test(phoneInput.value);
    phoneError.classList.toggle("hidden", isValid);
    phoneInput.setCustomValidity(isValid ? "" : "Por favor ingresa al menos 10 dígitos numéricos");
  });

  form.addEventListener("submit", async (event) => {
    event.preventDefault();

    // Validación adicional del teléfono antes de enviar
    const phoneValue = phoneInput.value;
    if (!/^[0-9]{10,}$/.test(phoneValue)) {
      phoneError.classList.remove("hidden");
      return;
    }

    const formData = new FormData(form);
    const data = Object.fromEntries(formData.entries()) as unknown as FormData;

    try {
      const response = await fetch("/api/contact", {
        method: "POST",
        body: JSON.stringify(data),
      });

      if (!response.ok) throw new Error("Failed to send form");

      alertMessage.innerHTML = SUCCESS_ALERT;
      form.reset(); 
    } catch (error) {
      alertMessage.innerHTML = ERROR_ALERT;
    
    }
  });
</script>
